<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jonny&#39;s Blog</title>
  
  <subtitle>Jonny</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.first-blood.cn/"/>
  <updated>2018-11-08T02:12:30.431Z</updated>
  <id>http://blog.first-blood.cn/</id>
  
  <author>
    <name>Jonny</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot配置Profile多环境支持</title>
    <link href="http://blog.first-blood.cn/2018/11/08/SpringBoot%E9%85%8D%E7%BD%AEProfile%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81/"/>
    <id>http://blog.first-blood.cn/2018/11/08/SpringBoot配置Profile多环境支持/</id>
    <published>2018-11-08T02:12:30.431Z</published>
    <updated>2018-11-08T02:12:30.431Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Profile是Spring对不同环境提供不同配置功能的支持，可以通过不同需求激活指定环境配置"><a href="#Profile是Spring对不同环境提供不同配置功能的支持，可以通过不同需求激活指定环境配置" class="headerlink" title="Profile是Spring对不同环境提供不同配置功能的支持，可以通过不同需求激活指定环境配置"></a>Profile是Spring对不同环境提供不同配置功能的支持，可以通过不同需求激活指定环境配置</h3><h5 id="1、多Profile文件定义形式"><a href="#1、多Profile文件定义形式" class="headerlink" title="1、多Profile文件定义形式"></a>1、多Profile文件定义形式</h5><ul><li><code>application-{profile}.properties</code>或者<code>application-{profile}.yml</code><ul><li><code>application-dev.properties</code> 或<code>application-dev.yml</code></li><li><code>application-test.properties</code> 或<code>application-test.yml</code></li><li><code>application-prod.properties</code> 或<code>application-prod.yml</code></li></ul></li></ul><h5 id="2、多profile文档块形式"><a href="#2、多profile文档块形式" class="headerlink" title="2、多profile文档块形式"></a>2、多profile文档块形式</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">prod</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">test</span></span><br><span class="line">  </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><h3 id="激活方式"><a href="#激活方式" class="headerlink" title="激活方式"></a>激活方式</h3><h5 id="1、在yml或者properties中通过配置激活"><a href="#1、在yml或者properties中通过配置激活" class="headerlink" title="1、在yml或者properties中通过配置激活"></a>1、在yml或者properties中通过配置激活</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">dev</span> <span class="comment"># 激活开发环境</span></span><br></pre></td></tr></table></figure><h5 id="2、命令行激活"><a href="#2、命令行激活" class="headerlink" title="2、命令行激活"></a>2、命令行激活</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--spring.profiles.active=dev</span><br></pre></td></tr></table></figure><ul><li><p>此命令式在<code>IDEA</code>中<code>Program arguments</code>输入框中设置</p></li><li><p>部署到本地激活方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar demo-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod</span><br></pre></td></tr></table></figure></li></ul><h5 id="3、JVM虚拟机参数激活"><a href="#3、JVM虚拟机参数激活" class="headerlink" title="3、JVM虚拟机参数激活"></a>3、JVM虚拟机参数激活</h5><ul><li><p>在<code>IDEA</code>中<code>VM Options</code>中输入框中设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dspring.profiles.active=dev</span><br></pre></td></tr></table></figure></li><li><p>部署到本地激活方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -Dspring.profiles.active=<span class="built_in">test</span> demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Profile是Spring对不同环境提供不同配置功能的支持，可以通过不同需求激活指定环境配置&quot;&gt;&lt;a href=&quot;#Profile是Spring对不同环境提供不同配置功能的支持，可以通过不同需求激活指定环境配置&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="SpringBoot" scheme="http://blog.first-blood.cn/tags/SpringBoot/"/>
    
      <category term="Profile" scheme="http://blog.first-blood.cn/tags/Profile/"/>
    
      <category term="多环境配置" scheme="http://blog.first-blood.cn/tags/%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot配置文件优先级加载顺序</title>
    <link href="http://blog.first-blood.cn/2018/11/08/SpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BC%98%E5%85%88%E7%BA%A7%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/"/>
    <id>http://blog.first-blood.cn/2018/11/08/SpringBoot配置文件优先级加载顺序/</id>
    <published>2018-11-08T02:12:30.431Z</published>
    <updated>2018-11-08T02:12:30.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置文件优先级从高到低顺序↓"><a href="#配置文件优先级从高到低顺序↓" class="headerlink" title="配置文件优先级从高到低顺序↓"></a>配置文件优先级从高到低顺序↓</h2><ul><li><code>file:./config/</code>  - 优先级最高（项目根路径下的<code>config</code>）</li><li><code>file:./</code>  - 优先级第二  -（项目根路径下）</li><li><code>classpath:/config/</code>  - 优先级第三（项目<code>resources/config</code>下）</li><li><code>classpath:/</code>  - 优先级第四（项目<code>resources</code>根目录）</li></ul><blockquote><p>SpringBoot项目启动会去扫面项目以上目录位置的<code>application.yml</code>或<code>application.properties</code>文件</p></blockquote><h4 id="以上位置的application-yml或application-properties遵循："><a href="#以上位置的application-yml或application-properties遵循：" class="headerlink" title="以上位置的application.yml或application.properties遵循："></a>以上位置的<code>application.yml</code>或<code>application.properties</code>遵循：</h4><ul><li><p><code>高优先级配置</code>会覆盖<code>低优先级配置</code></p></li><li><p>多个配置文件<code>互补</code></p><ul><li>比如，两个同名文件里面有相同的配置，相同的配置会被高优先级的配置覆盖</li></ul><blockquote><p>A配置优先级大于B配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><blockquote><p>B配置优先级小于A配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span> </span><br><span class="line"><span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">context-path:</span> <span class="string">/test</span></span><br></pre></td></tr></table></figure><p>项目启动后访问地址为：<code>http://localhost:8080/test</code>，这就是所谓的<code>互补</code></p></li></ul><hr><h4 id="项目打包运行后可通过命令指定配置文件位置"><a href="#项目打包运行后可通过命令指定配置文件位置" class="headerlink" title="项目打包运行后可通过命令指定配置文件位置"></a>项目打包运行后可通过命令指定配置文件位置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--spring.config.location=d:/application.properties</span><br></pre></td></tr></table></figure><ul><li>实例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar demo-xxx.jar --spring.config.location=d:/application.properties</span><br></pre></td></tr></table></figure><blockquote><p>这对于运维来说非常方便，在不破坏原配置情况下轻松修改少量配置就可以达到想要的效果</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;配置文件优先级从高到低顺序↓&quot;&gt;&lt;a href=&quot;#配置文件优先级从高到低顺序↓&quot; class=&quot;headerlink&quot; title=&quot;配置文件优先级从高到低顺序↓&quot;&gt;&lt;/a&gt;配置文件优先级从高到低顺序↓&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;file:./con
      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="SpringBoot" scheme="http://blog.first-blood.cn/tags/SpringBoot/"/>
    
      <category term="配置" scheme="http://blog.first-blood.cn/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="优先级" scheme="http://blog.first-blood.cn/tags/%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot配置文件占位符</title>
    <link href="http://blog.first-blood.cn/2018/11/07/SpringBoot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8D%A0%E4%BD%8D%E7%AC%A6/"/>
    <id>http://blog.first-blood.cn/2018/11/07/SpringBoot配置文件占位符/</id>
    <published>2018-11-07T09:18:14.417Z</published>
    <updated>2018-11-07T09:18:14.417Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在<code>properties</code>或<code>yaml</code>配置文件中是可以使用占位符的</p></blockquote><h3 id="1、随机数"><a href="#1、随机数" class="headerlink" title="1、随机数"></a>1、随机数</h3><ul><li><code>${random.value}</code> - 类似<code>uuid</code>的随机数，没有”<code>-</code>“连接</li><li><code>${random.int}</code> - 随机取整型范围内的一个值</li><li><code>${random.long}</code> - 随机取长整型范围内的一个值</li><li><code>${random.long(100,200)}</code> - 随机生成长整型<code>100-200</code>范围内的一个值</li><li><code>${random.uuid}</code> - 生成一个<code>uuid</code>，有短杠连接</li><li><code>${random.int(10)}</code> - 随机生成一个10以内的数</li><li><code>${random.int(100,200)}</code> - 随机生成一个<code>100-200</code> 范围以内的数</li></ul><blockquote><p>例子</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#user.username=$&#123;random.value&#125;</span><br><span class="line">#user.username=$&#123;random.int&#125;</span><br><span class="line">#user.username=$&#123;random.long&#125;</span><br><span class="line">#user.username=$&#123;random.uuid&#125;</span><br><span class="line">#user.username=$&#123;random.int(10)&#125;</span><br><span class="line">#user.username=$&#123;random.int(100,200)&#125;</span><br><span class="line">user.username=$&#123;random.long(100,200)&#125;</span><br></pre></td></tr></table></figure><h3 id="2、占位符"><a href="#2、占位符" class="headerlink" title="2、占位符"></a>2、占位符</h3><ul><li><code>${key:defaultValue}</code> - 若<code>key</code> 不存在，则将<code>defaultValue</code>的值赋值给取值的对象</li></ul><blockquote><p>例子</p></blockquote><ul><li><code>${user.username}</code> 当在配置文件中用这个表达式，而user.username未定义的时候，取值时会将<code>${user.username}</code> 当做字符串处理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.username=$&#123;test.xx:周伯通&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在&lt;code&gt;properties&lt;/code&gt;或&lt;code&gt;yaml&lt;/code&gt;配置文件中是可以使用占位符的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1、随机数&quot;&gt;&lt;a href=&quot;#1、随机数&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="SpringBoot" scheme="http://blog.first-blood.cn/tags/SpringBoot/"/>
    
      <category term="占位符" scheme="http://blog.first-blood.cn/tags/%E5%8D%A0%E4%BD%8D%E7%AC%A6/"/>
    
      <category term="默认值" scheme="http://blog.first-blood.cn/tags/%E9%BB%98%E8%AE%A4%E5%80%BC/"/>
    
      <category term="SpEL" scheme="http://blog.first-blood.cn/tags/SpEL/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot中@PropertySource和@ImportResource以及@Bean</title>
    <link href="http://blog.first-blood.cn/2018/11/07/SpringBoot%E4%B8%AD@PropertySource%E5%92%8C@ImportResource%E4%BB%A5%E5%8F%8A@Bean/"/>
    <id>http://blog.first-blood.cn/2018/11/07/SpringBoot中@PropertySource和@ImportResource以及@Bean/</id>
    <published>2018-11-07T07:29:42.263Z</published>
    <updated>2018-11-07T07:32:42.682Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="PropertySource"><a href="#PropertySource" class="headerlink" title="@PropertySource"></a><code>@PropertySource</code></h3><ul><li>加载指定的配置文件</li><li>只能加载<code>*.properties</code>文件，不能加载<code>yaml</code>文件</li></ul><blockquote><p>新建一个<code>user.properties</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">user.nickname=张三</span><br><span class="line">user.age=19</span><br><span class="line">user.sex=男</span><br><span class="line">user.maps.weight=70</span><br><span class="line">user.maps.height=170</span><br><span class="line">user.address.addr=重庆市渝中区</span><br></pre></td></tr></table></figure><blockquote><p><code>UserBean</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@PropertySource</span>(value = &#123;<span class="string">"classpath:user.properties"</span>&#125;)</span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">char</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Integer&gt; maps;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="ImportResource"><a href="#ImportResource" class="headerlink" title="@ImportResource"></a><code>@ImportResource</code></h3><ul><li>导入<code>Spring</code>的配置文件，让配置文件里面的内容生效</li></ul><blockquote><p>SpringBoot中编写的Spring配置文件是不能自动识别的</p></blockquote><p><strong>在主配置类上加入<code>@ImportResource</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ImportResource</span>(locations = &#123;<span class="string">"classpath:beans.xml"</span>&#125;)</span><br></pre></td></tr></table></figure><hr><h3 id="SpringBoot给容器添加组件的方式"><a href="#SpringBoot给容器添加组件的方式" class="headerlink" title="SpringBoot给容器添加组件的方式"></a><code>SpringBoot</code>给容器添加组件的方式</h3><h5 id="1、配置类-Spring配置文件-通过-Configuration声明"><a href="#1、配置类-Spring配置文件-通过-Configuration声明" class="headerlink" title="1、配置类  ==  Spring配置文件    通过@Configuration声明"></a>1、配置类  ==  Spring配置文件    通过<code>@Configuration</code>声明</h5><h5 id="2、使用-Bean给容器添加组件，组件id默认为方法名"><a href="#2、使用-Bean给容器添加组件，组件id默认为方法名" class="headerlink" title="2、使用@Bean给容器添加组件，组件id默认为方法名"></a>2、使用<code>@Bean</code>给容器添加组件，组件id默认为方法名</h5><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Hello <span class="title">helloService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"添加组件"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Hello();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceApplicationTests</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//@Autowired</span></span><br><span class="line"><span class="comment">//  private Hello hello;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  @Test</span></span><br><span class="line"><span class="comment">//  public void hello() &#123;</span></span><br><span class="line"><span class="comment">//      hello.helloService();</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext ioc;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ioc.getBean(<span class="string">"helloService"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="请注意"><a href="#请注意" class="headerlink" title="请注意"></a>请注意</h2><blockquote><p>若配置类已经加了@Bean注解，此时配置类中的方法名不能跟类名一样，也就是上面的Hello类中不能定义hello()的方法，否则报错</p></blockquote><hr><h1 id="通过自定义工厂来实现自定义yaml文件加载"><a href="#通过自定义工厂来实现自定义yaml文件加载" class="headerlink" title="通过自定义工厂来实现自定义yaml文件加载"></a>通过自定义工厂来实现自定义yaml文件加载</h1><h4 id="新建一个cat-yml文件"><a href="#新建一个cat-yml文件" class="headerlink" title="新建一个cat.yml文件"></a>新建一个<code>cat.yml</code>文件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cat:</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  height:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">  weight:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h4 id="工厂类"><a href="#工厂类" class="headerlink" title="工厂类"></a>工厂类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.YamlPropertiesFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.PropertiesPropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.EncodedResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.PropertySourceFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">YamlPropertySourceFactory</span> <span class="keyword">implements</span> <span class="title">PropertySourceFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PropertySource&lt;?&gt; createPropertySource(<span class="meta">@Nullable</span> String name, EncodedResource resource) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        Properties propertiesFromYaml = loadYamlIntoProperties(resource);</span><br><span class="line">        String sourceName = name != <span class="keyword">null</span> ? name : resource.getResource().getFilename();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PropertiesPropertySource(sourceName, propertiesFromYaml);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Properties <span class="title">loadYamlIntoProperties</span><span class="params">(EncodedResource resource)</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            YamlPropertiesFactoryBean factory = <span class="keyword">new</span> YamlPropertiesFactoryBean();</span><br><span class="line">            factory.setResources(resource.getResource());</span><br><span class="line">            factory.afterPropertiesSet();</span><br><span class="line">            <span class="keyword">return</span> factory.getObject();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalStateException e) &#123;</span><br><span class="line">            <span class="comment">// for ignoreResourceNotFound</span></span><br><span class="line">            Throwable cause = e.getCause();</span><br><span class="line">            <span class="keyword">if</span> (cause <span class="keyword">instanceof</span> FileNotFoundException)</span><br><span class="line">                <span class="keyword">throw</span> (FileNotFoundException) e.getCause();</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建配置类-Cat，配合-PropertySource-注解使用"><a href="#新建配置类-Cat，配合-PropertySource-注解使用" class="headerlink" title="新建配置类 Cat，配合@PropertySource 注解使用"></a>新建配置类 <code>Cat</code>，配合<code>@PropertySource</code> 注解使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atgenee.demo.factory.YamlPropertySourceFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@PropertySource</span>(factory = YamlPropertySourceFactory.class, value = <span class="string">"classpath:cat.yml"</span>)</span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"cat"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Double weight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Double height;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getWeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(Double weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(Double height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Cat&#123;"</span> +</span><br><span class="line">                <span class="string">"age="</span> + age +</span><br><span class="line">                <span class="string">", weight="</span> + weight +</span><br><span class="line">                <span class="string">", height="</span> + height +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Cat测试类"><a href="#Cat测试类" class="headerlink" title="Cat测试类"></a>Cat测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atgenee.demo.config.Cat;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CatApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hei</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(cat);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cat&#123;age=<span class="number">3</span>, weight=<span class="number">5.0</span>, height=<span class="number">20.0</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;PropertySource&quot;&gt;&lt;a href=&quot;#PropertySource&quot; class=&quot;headerlink&quot; title=&quot;@PropertySource&quot;&gt;&lt;/a&gt;&lt;code&gt;@PropertySource&lt;/code&gt;&lt;/h3&gt;&lt;ul&gt;

      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="SpringBoot" scheme="http://blog.first-blood.cn/tags/SpringBoot/"/>
    
      <category term="yaml" scheme="http://blog.first-blood.cn/tags/yaml/"/>
    
      <category term="yml" scheme="http://blog.first-blood.cn/tags/yml/"/>
    
      <category term="自定义yml" scheme="http://blog.first-blood.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89yml/"/>
    
      <category term="自定义yaml" scheme="http://blog.first-blood.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89yaml/"/>
    
      <category term="自定义properties" scheme="http://blog.first-blood.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89properties/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot单元测试</title>
    <link href="http://blog.first-blood.cn/2018/11/07/SpringBoot%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>http://blog.first-blood.cn/2018/11/07/SpringBoot单元测试/</id>
    <published>2018-11-07T07:29:42.263Z</published>
    <updated>2018-11-07T07:29:42.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在测试类中读取某个application-开头的properties或yaml中的属性"><a href="#在测试类中读取某个application-开头的properties或yaml中的属性" class="headerlink" title="在测试类中读取某个application-开头的properties或yaml中的属性"></a>在测试类中读取某个<code>application-</code>开头的<code>properties</code>或<code>yaml</code>中的属性</h2><h1 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h1><ul><li>必须以<code>application-</code>开头<ul><li><code>application-dev.properties</code></li><li><code>application-test.properties</code></li><li><code>application-dev.yml</code></li><li><code>application-dev.yml</code></li></ul></li></ul><blockquote><p>通过<code>@ActiveProfiles</code>来指定使用哪个文件</p></blockquote><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ActiveProfiles;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@ActiveProfiles</span>(<span class="string">"test"</span>) <span class="comment">//指定使用application-test.yml</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.first-name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String firstName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.weight&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer weight;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hei</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(firstName);</span><br><span class="line">        System.out.println(weight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="TestPropertySource"><a href="#TestPropertySource" class="headerlink" title="@TestPropertySource"></a><code>@TestPropertySource</code></h2><ul><li>加载指定配置文件</li><li>可以是<code>properties</code>文件，也可以是<code>yaml</code></li></ul><h2 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.TestPropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@TestPropertySource</span>(properties = &#123; <span class="string">"spring.config.location = classpath:test.properties"</span> &#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.first-name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String firstName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.weight&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer weight;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hei</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(firstName);</span><br><span class="line">        System.out.println(weight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;在测试类中读取某个application-开头的properties或yaml中的属性&quot;&gt;&lt;a href=&quot;#在测试类中读取某个application-开头的properties或yaml中的属性&quot; class=&quot;headerlink&quot; title=&quot;在测试类中读
      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="SpringBoot" scheme="http://blog.first-blood.cn/tags/SpringBoot/"/>
    
      <category term="yaml" scheme="http://blog.first-blood.cn/tags/yaml/"/>
    
      <category term="yml" scheme="http://blog.first-blood.cn/tags/yml/"/>
    
      <category term="自定义yml" scheme="http://blog.first-blood.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89yml/"/>
    
      <category term="自定义yaml" scheme="http://blog.first-blood.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89yaml/"/>
    
      <category term="自定义properties" scheme="http://blog.first-blood.cn/tags/%E8%87%AA%E5%AE%9A%E4%B9%89properties/"/>
    
  </entry>
  
  <entry>
    <title>yaml基本语法</title>
    <link href="http://blog.first-blood.cn/2018/11/06/yaml%E7%94%A8%E6%B3%95/"/>
    <id>http://blog.first-blood.cn/2018/11/06/yaml用法/</id>
    <published>2018-11-06T08:57:44.717Z</published>
    <updated>2018-11-06T08:57:44.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="YAML用法"><a href="#YAML用法" class="headerlink" title="YAML用法"></a>YAML用法</h2><blockquote><p>对象或键值对</p></blockquote><h3 id="1、普通用法"><a href="#1、普通用法" class="headerlink" title="1、普通用法"></a>1、普通用法</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user:</span> </span><br><span class="line"><span class="attr">name:</span> <span class="string">zhangsan</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h3 id="2、行内用法"><a href="#2、行内用法" class="headerlink" title="2、行内用法"></a>2、行内用法</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user:</span> <span class="string">&#123;name:</span> <span class="string">zhangsan,age:</span> <span class="number">20</span><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>数组</p></blockquote><h3 id="1、普通用法-1"><a href="#1、普通用法-1" class="headerlink" title="1、普通用法"></a>1、普通用法</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pets:</span> </span><br><span class="line"><span class="bullet">    -</span> <span class="string">pig</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">dog</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cat</span></span><br></pre></td></tr></table></figure><h3 id="2、行内写法"><a href="#2、行内写法" class="headerlink" title="2、行内写法"></a>2、行内写法</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ptes:</span> <span class="string">[pig,dog,cat]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;YAML用法&quot;&gt;&lt;a href=&quot;#YAML用法&quot; class=&quot;headerlink&quot; title=&quot;YAML用法&quot;&gt;&lt;/a&gt;YAML用法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;对象或键值对&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1、普通用法&quot;&gt;
      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="yaml" scheme="http://blog.first-blood.cn/tags/yaml/"/>
    
      <category term="yml" scheme="http://blog.first-blood.cn/tags/yml/"/>
    
      <category term="application.yml" scheme="http://blog.first-blood.cn/tags/application-yml/"/>
    
      <category term="application.properties" scheme="http://blog.first-blood.cn/tags/application-properties/"/>
    
  </entry>
  
  <entry>
    <title>windows以管理员运行快捷方式</title>
    <link href="http://blog.first-blood.cn/2018/11/06/windows%E4%BB%A5%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%90%E8%A1%8C%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/"/>
    <id>http://blog.first-blood.cn/2018/11/06/windows以管理员运行快捷方式/</id>
    <published>2018-11-06T08:57:44.716Z</published>
    <updated>2018-11-06T08:57:44.716Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Windows通过右键菜单，快捷打开CMD-Admin-窗口"><a href="#Windows通过右键菜单，快捷打开CMD-Admin-窗口" class="headerlink" title="Windows通过右键菜单，快捷打开CMD(Admin)窗口"></a>Windows通过右键菜单，快捷打开CMD(Admin)窗口</h3><p><img src="https://javaweb-community.oss-cn-beijing.aliyuncs.com/2018/1022/3c3393038d29453cbd1c1a09e9242875.png" alt=""></p><blockquote><p>  创建一个后缀为.reg的文件，将下面的内容复制复制到该文件中</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">; Created by: Shawn Brink</span><br><span class="line">; http://www.sevenforums.com</span><br><span class="line">; Tutorial: http://www.sevenforums.com/tutorials/47415-open-command-window-here-administrator.html</span><br><span class="line">[-HKEY_CLASSES_ROOT\Directory\shell\runas]</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\runas]</span><br><span class="line">@=&quot;Open CMD&quot;</span><br><span class="line">&quot;HasLUAShield&quot;=&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\runas\command]</span><br><span class="line">@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</span><br><span class="line">[-HKEY_CLASSES_ROOT\Directory\Background\shell\runas]</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\runas]</span><br><span class="line">@=&quot;Open CMD&quot;</span><br><span class="line">&quot;HasLUAShield&quot;=&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\runas\command]</span><br><span class="line">@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</span><br><span class="line">[-HKEY_CLASSES_ROOT\Drive\shell\runas]</span><br><span class="line">[HKEY_CLASSES_ROOT\Drive\shell\runas]</span><br><span class="line">@=&quot;Open CMD&quot;</span><br><span class="line">&quot;HasLUAShield&quot;=&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Drive\shell\runas\command]</span><br><span class="line">@=&quot;cmd.exe /s /k pushd \&quot;%V\&quot;&quot;</span><br></pre></td></tr></table></figure><blockquote><p>  最后双击添加到注册表中</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Windows通过右键菜单，快捷打开CMD-Admin-窗口&quot;&gt;&lt;a href=&quot;#Windows通过右键菜单，快捷打开CMD-Admin-窗口&quot; class=&quot;headerlink&quot; title=&quot;Windows通过右键菜单，快捷打开CMD(Admin)窗口&quot;&gt;
      
    
    </summary>
    
      <category term="Windows技巧" scheme="http://blog.first-blood.cn/categories/Windows%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Windows" scheme="http://blog.first-blood.cn/tags/Windows/"/>
    
      <category term="bat" scheme="http://blog.first-blood.cn/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot读取yaml配置</title>
    <link href="http://blog.first-blood.cn/2018/11/06/SpringBoot%E8%AF%BB%E5%8F%96yaml%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.first-blood.cn/2018/11/06/SpringBoot读取yaml配置/</id>
    <published>2018-11-06T08:57:44.714Z</published>
    <updated>2018-11-06T09:31:57.644Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SpringBoot读取yaml配置的值"><a href="#SpringBoot读取yaml配置的值" class="headerlink" title="SpringBoot读取yaml配置的值"></a>SpringBoot读取yaml配置的值</h2><blockquote><p>在<code>application.yml</code>中添加配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">张三</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">19</span></span><br><span class="line"><span class="attr">  sex:</span> <span class="string">男</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  maps:</span> <span class="string">&#123;weight:</span> <span class="number">70</span><span class="string">,height:</span> <span class="number">170</span><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  address:</span></span><br><span class="line"><span class="attr">    addr:</span> <span class="string">重庆市渝中区</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  lists:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">京东</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">淘宝</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">坑多多</span></span><br></pre></td></tr></table></figure><blockquote><p>新建Address类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String addr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> addr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddr</span><span class="params">(String addr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.addr = addr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Address&#123;"</span> +</span><br><span class="line">                <span class="string">"addr='"</span> + addr + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>新建<code>User</code>类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">char</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Integer&gt; maps;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; lists;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(<span class="keyword">char</span> sex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Integer&gt; <span class="title">getMaps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> maps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMaps</span><span class="params">(Map&lt;String, Integer&gt; maps)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maps = maps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(Address address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getLists</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLists</span><span class="params">(List&lt;String&gt; lists)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lists = lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">", sex="</span> + sex +</span><br><span class="line">                <span class="string">", maps="</span> + maps +</span><br><span class="line">                <span class="string">", address="</span> + address +</span><br><span class="line">                <span class="string">", lists="</span> + lists +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新建测试类"><a href="#新建测试类" class="headerlink" title="新建测试类"></a>新建测试类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atgenee.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.atgenee.demo.config.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注入配置类</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    User user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User&#123;name=<span class="string">'Administrator'</span>, age=<span class="number">19</span>, sex=男, maps=&#123;weight=<span class="number">70</span>, height=<span class="number">170</span>&#125;, address=Address&#123;addr=<span class="string">'重庆市渝中区'</span>&#125;, lists=[京东, 淘宝, 坑多多]&#125;</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li><p><code>yaml</code>格式要求严格，以键值形式配置，键后冒号后面的空格一定不要丢（如: <code>username: admin</code>）</p></li><li><p><code>@ConfigurationProperties</code>注解依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SpringBoot读取yaml配置的值&quot;&gt;&lt;a href=&quot;#SpringBoot读取yaml配置的值&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot读取yaml配置的值&quot;&gt;&lt;/a&gt;SpringBoot读取yaml配置的值&lt;/h2&gt;&lt;
      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="SpringBoot" scheme="http://blog.first-blood.cn/tags/SpringBoot/"/>
    
      <category term="yaml" scheme="http://blog.first-blood.cn/tags/yaml/"/>
    
      <category term="yml" scheme="http://blog.first-blood.cn/tags/yml/"/>
    
      <category term="application.yml" scheme="http://blog.first-blood.cn/tags/application-yml/"/>
    
      <category term="application.properties" scheme="http://blog.first-blood.cn/tags/application-properties/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置proxy_pass后，访问时路径丢失怎么办</title>
    <link href="http://blog.first-blood.cn/2018/11/01/nginx%E9%85%8D%E7%BD%AEproxy_pass%E5%90%8E%EF%BC%8C%E8%AE%BF%E9%97%AE%E6%97%B6%E8%B7%AF%E5%BE%84%E4%B8%A2%E5%A4%B1%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
    <id>http://blog.first-blood.cn/2018/11/01/nginx配置proxy_pass后，访问时路径丢失怎么办/</id>
    <published>2018-11-01T09:40:38.916Z</published>
    <updated>2018-11-01T09:42:42.636Z</updated>
    
    <content type="html"><![CDATA[<h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><blockquote><p>当我访问<code>blog.first-blood.cn</code>的时候，proxy_pass转发到<code>jonny023.github.io</code>这个域名下去了，而<code>jonny023.github.io/upload/hello.jpg</code>这个文件我通过<code>blog.first-blood.cn/upload/hello.jpg</code>访问就出现404</p></blockquote><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><ul><li>此时在nginx的配置文件下的location配置下面添加一句</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header Host jonny023.github.io;</span><br></pre></td></tr></table></figure><h2 id="注意知道对不对，如果不对请来砍我"><a href="#注意知道对不对，如果不对请来砍我" class="headerlink" title="注意知道对不对，如果不对请来砍我"></a>注意知道对不对，如果不对请来砍我</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name blog.first-blood.cn;</span><br><span class="line">charset utf-8,gbk;</span><br><span class="line">root html;  </span><br><span class="line">index index.html index.htm;</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_set_header Host jonny023.github.io;</span><br><span class="line">#proxy_set_header Host           $host;</span><br><span class="line">proxy_set_header X-Real-IP       $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_pass https://jonny023.github.io;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ^~/archives/ &#123;</span><br><span class="line">proxy_pass https://jonny023.github.io/archives/;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ^~/uploads/ &#123;</span><br><span class="line">proxy_pass https://jonny023.github.io/uploads/;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /favico.ico &#123;</span><br><span class="line"> proxy_pass https://jonny023.github.io;</span><br><span class="line"> charset utf-8,gbk;</span><br><span class="line"> expires      12h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ .*\.(js|css|eot|otf|ttf|woff|woff2)?$ &#123;</span><br><span class="line">proxy_pass https://jonny023.github.io;</span><br><span class="line">charset utf-8,gbk;</span><br><span class="line">expires      12h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~* \.(eot|otf|ttf|woff|woff2)$ &#123;</span><br><span class="line">add_header Access-Control-Allow-Origin *;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;应用场景&quot;&gt;&lt;a href=&quot;#应用场景&quot; class=&quot;headerlink&quot; title=&quot;应用场景&quot;&gt;&lt;/a&gt;应用场景&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;当我访问&lt;code&gt;blog.first-blood.cn&lt;/code&gt;的时候，proxy_pas
      
    
    </summary>
    
      <category term="运维" scheme="http://blog.first-blood.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Nginx" scheme="http://blog.first-blood.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>StringUtils工具包join方法转字符</title>
    <link href="http://blog.first-blood.cn/2018/11/01/StringUtils%E5%B7%A5%E5%85%B7%E5%8C%85join%E6%96%B9%E6%B3%95%E8%BD%AC%E5%AD%97%E7%AC%A6/"/>
    <id>http://blog.first-blood.cn/2018/11/01/StringUtils工具包join方法转字符/</id>
    <published>2018-11-01T07:36:36.429Z</published>
    <updated>2018-11-01T08:52:24.924Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h1><ul><li>将集合、数组元素通过指定字符连接为一个字符串</li></ul><blockquote><p>StringUtils.join()跟JDK1.8里面的String.join()差不多</p></blockquote><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;commons-lang&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;commons-lang&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">list.add(<span class="string">"市场"</span>);</span><br><span class="line">list.add(<span class="string">"销售"</span>);</span><br><span class="line">list.add(<span class="string">"运维"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 集合</span></span><br><span class="line">String str = StringUtils.join(list,<span class="string">","</span>);</span><br><span class="line">System.out.println(str);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组</span></span><br><span class="line">Object[] arrs = &#123;<span class="number">10010</span>,<span class="number">10011</span>,<span class="number">10086</span>,<span class="number">10000</span>&#125;;</span><br><span class="line">String s = StringUtils.join(arrs,<span class="string">","</span>);</span><br><span class="line">System.out.println(s);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>执行结果</p></blockquote><p><img src="https://javaweb-community.oss-cn-beijing.aliyuncs.com/2018/1101/70907dcdf5b84e589bfe9b6b8a33fb46.png" alt=""></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li>StringUtils转数组的时候，只能是Object类型的数组</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot; title=&quot;作用&quot;&gt;&lt;/a&gt;作用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;将集合、数组元素通过指定字符连接为一个字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;StringUtils.jo
      
    
    </summary>
    
      <category term="后端" scheme="http://blog.first-blood.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="http://blog.first-blood.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Oracle case when then分组排序</title>
    <link href="http://blog.first-blood.cn/2018/11/01/Oracle%20case%20when%20then%E5%88%86%E7%BB%84%E6%8E%92%E5%BA%8F/"/>
    <id>http://blog.first-blood.cn/2018/11/01/Oracle case when then分组排序/</id>
    <published>2018-11-01T06:00:35.058Z</published>
    <updated>2018-11-06T08:57:44.713Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><ul><li><code>Oracle</code>数据库使用<code>case when then end</code>别名后，<code>group by</code>不能使用这个别名，但是<code>order by</code>可以</li></ul><h3 id="使用函数"><a href="#使用函数" class="headerlink" title="使用函数"></a>使用函数</h3><ul><li><code>TO_CHAR( SYSDATE, &#39;yyyy&#39; )</code>作用是获取系统时间年份</li><li><code>EXTRACT( year FROM DATE_CREATED )</code>作用是获取表字段年份</li></ul><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">COUNT( * ) AS rs,</span><br><span class="line">CASE</span><br><span class="line"></span><br><span class="line">WHEN TO_CHAR( SYSDATE, &apos;yyyy&apos; ) - TO_CHAR( NAT_DATE, &apos;yyyy&apos; ) &lt; 18 THEN</span><br><span class="line">&apos;17岁及其以下&apos; </span><br><span class="line">END n</span><br><span class="line">FROM</span><br><span class="line">PERSON_INFO </span><br><span class="line">WHERE</span><br><span class="line">EXTRACT( year FROM DATE_CREATED ) = &apos;2018&apos; </span><br><span class="line">AND person_status = 0</span><br><span class="line">GROUP BY</span><br><span class="line">CASE</span><br><span class="line"></span><br><span class="line">WHEN TO_CHAR( SYSDATE, &apos;yyyy&apos; ) - TO_CHAR( NAT_DATE, &apos;yyyy&apos; ) &lt; 18 THEN</span><br><span class="line">&apos;17岁及其以下&apos; </span><br><span class="line">END</span><br><span class="line">ORDER BY</span><br><span class="line">n</span><br></pre></td></tr></table></figure><blockquote><p>目前解决方案是分组时直接使用<code>case when then end</code>完整代码，若有大佬有其他解决方案，请联系我，Thanks!</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Oracle&lt;/code&gt;数据库使用&lt;code&gt;case when then end&lt;/code&gt;别
      
    
    </summary>
    
      <category term="数据库" scheme="http://blog.first-blood.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Oracle" scheme="http://blog.first-blood.cn/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>nginx本地域名映射及tomcat集群session共享</title>
    <link href="http://blog.first-blood.cn/2018/10/26/nginx%E6%9C%AC%E5%9C%B0%E5%9F%9F%E5%90%8D%E6%98%A0%E5%B0%84%E5%8F%8Atomcat%E9%9B%86%E7%BE%A4session%E5%85%B1%E4%BA%AB/"/>
    <id>http://blog.first-blood.cn/2018/10/26/nginx本地域名映射及tomcat集群session共享/</id>
    <published>2018-10-26T08:34:00.483Z</published>
    <updated>2018-11-01T08:52:02.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本地域名映射"><a href="#本地域名映射" class="headerlink" title="本地域名映射"></a>本地域名映射</h2><ul><li>修改C:\Windows\System32\drivers\etc下的hosts文件，在hosts中添加</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1       www.cms.com</span><br></pre></td></tr></table></figure><h2 id="nginx配置集群配置"><a href="#nginx配置集群配置" class="headerlink" title="nginx配置集群配置"></a>nginx配置集群配置</h2><ul><li>修改nginx.conf文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">    upstream local &#123;</span><br><span class="line">        server 127.0.0.1:8889;</span><br><span class="line">        server 127.0.0.1:8880;</span><br><span class="line">        ip_hash;  # 解决session共享问题</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line"></span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    charset utf-8,gbk;  # 解决中文乱码问题。</span><br><span class="line">    proxy_pass http://local;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本地域名映射&quot;&gt;&lt;a href=&quot;#本地域名映射&quot; class=&quot;headerlink&quot; title=&quot;本地域名映射&quot;&gt;&lt;/a&gt;本地域名映射&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;修改C:\Windows\System32\drivers\etc下的hosts文件，在host
      
    
    </summary>
    
      <category term="运维" scheme="http://blog.first-blood.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Nginx" scheme="http://blog.first-blood.cn/tags/Nginx/"/>
    
      <category term="Tomcat" scheme="http://blog.first-blood.cn/tags/Tomcat/"/>
    
      <category term="Tomcat集群" scheme="http://blog.first-blood.cn/tags/Tomcat%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
</feed>
